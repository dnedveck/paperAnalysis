install.packages("dplyr")
install.packages("ggplot2")
install.packages(ISwR)
install.packages("ISwR")
require(ISwR)
?ISwR
search()
1.9999999999999999999999999999999999999999999999999999999999999 + 1
<- function(mu, # the mean of the distribution
sigma, # the standard deviation you want
numpoints){ # the number of points to plot
# This function takes mu, sigma, and the number of points, and returns a plot of
# the distribution
# pick the ten points to calculate, evenly spaces
# want the spread to be 4 sd's
lowerBound <- mu - 2*sigma
upperBound <- mu + 2*sigma
points <- seq(from= lowerBound, to=upperBound, length.out= numpoints )
return(points)
}
vizualizeNormal <- function(mu, # the mean of the distribution
sigma, # the standard deviation you want
numpoints){ # the number of points to plot
# This function takes mu, sigma, and the number of points, and returns a plot of
# the distribution
# pick the ten points to calculate, evenly spaces
# want the spread to be 4 sd's
lowerBound <- mu - 2*sigma
upperBound <- mu + 2*sigma
points <- seq(from= lowerBound, to=upperBound, length.out= numpoints )
return(points)
}
vizualizeNormal <- function(mu = 10, # the mean of the distribution
sigma = 1, # the standard deviation you want
numpoints= 10){ # the number of points to plot
# This function takes mu, sigma, and the number of points, and returns a plot of
# the distribution
# pick the ten points to calculate, evenly spaces
# want the spread to be 4 sd's
lowerBound <- mu - 2*sigma
upperBound <- mu + 2*sigma
points <- seq(from= lowerBound, to=upperBound, length.out= numpoints )
return(points)
}
vizuaizeNormal
vizuaizeNormal()
vizualizeNormal()
mu = 10
sigma = 1
numpoints= 10
lowerBound <- mu - 2*sigma
upperBound <- mu + 2*sigma
points <- seq(from= lowerBound, to=upperBound, length.out= numpoints )
plot(points)
popLargeV <- c(.2, .4, .7, .8, .34, .56, .45)
FstLargeV <- var(popLargeV) / (mean(popLargeV)*(1- mean(popLargeV)))
mean(popLargeV)
popSmallV <- c(.34, .45, .5, .54, .65, .44, .56)
FstLargeV <- var(popSmallV) / (mean(popSmallV)*(1- mean(popSmallV)))
knitr::opts_chunk$set(tidy = FALSE, fig.height=4, echo=FALSE)
options(stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
setwd("~/Dropbox/gradschool/Regus2014/data")
nodCulturing.df <- read.csv("Regus2014_TableS6.tsv", header= TRUE, sep="\t")
setwd("~/Dropbox/gradschool/paperanalysis/Regus2014/data")
setwd("~/Dropbox/gradschool/paperAnalysis/Regus2014/data")
nodCulturing.df <- read.csv("Regus2014_TableS6.tsv", header= TRUE, sep="\t")
View(nodCulturing.df)
ggplot(nodCulturing.df, aes(x=Experiment, y=PopEffStrain)) + geom_violin(fill="darkgrey")
fishY <- rep("YellowFish", 300)
fish <- c(rep("YellowFish", 300), rep("BlueFish", 100))
sample(fish, 50)
sample(fish, 50, replace = FALSE)
table(sample(fish, 50, replace = FALSE))
table(sample(fish, 50, replace = FALSE))
table(sample(fish, 50, replace = FALSE))
table(sample(fish, 50, replace = FALSE))
table(sample(fish, 50, replace = TRUE))
table(sample(fish, 50, replace = TRUE))
table(sample(fish, 50, replace = TRUE))
table(sample(fish, 50, replace = TRUE))
tablecounts <- c(35, 34, 30, 32, 31, 37, 41, 36, 30, 33, 34, 30, 38, )
tablecounts <- c(35, 34, 30, 32, 31, 37, 41, 36, 30, 33, 34, 30, 38 )
hist(tablecounts)
hist(tablecounts)
hist(tablecounts, breaks = 1-)
hist(tablecounts, breaks = 10)
ggplot( aes(x = tablecounts)) + geom_histogram()
ggplot(tablecounts aes(x = tablecounts)) + geom_histogram()
tablecounts <- data.frame(tablecounts)
tablecounts
ggplot(tablecounts aes(x = tablecounts)) + geom_histogram()
ggplot(tablecounts, aes(x = tablecounts)) + geom_histogram()
ggplot(tablecounts, aes(x = tablecounts)) + geom_histogram(binwidth=1)
table(tablecounts)
choose(40,5)
40*39*38*37*36
catch <- 100 + c(300:268)
catch
multiply(catch)
product(catch)
prod(catch)
choose(300, 32)
choose(300, 32)/ choose(400,32)
rep("y", 300)
rep(times=300, x="y")
tlc
library(ISwR)
tlc
tlc$sex
tlc["sex"]
tlc[, "sex"]
